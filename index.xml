<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ingots of learning</title>
    <link>https://drdjing.github.io/</link>
    <description>Recent content on Ingots of learning</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Tue, 04 Aug 2020 01:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://drdjing.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Bioinformatics with Rosalind - REVC</title>
      <link>https://drdjing.github.io/blog/revc/</link>
      <pubDate>Tue, 04 Aug 2020 01:00:00 +0000</pubDate>
      
      <guid>https://drdjing.github.io/blog/revc/</guid>
      <description>This Rosalind problem deals with complementing DNA. So it should be as simple as telling the DNA is has really nice helical structure, right? Unfortunately not, though it is still simple. Each nucleotide can bond only to one other, in the manner A - T, and C - G, and these are the complements. So to find the complement of an entire DNA string, you just replace all the symbols with their counterpart, and funnily enough the reverse complement is the reverse of the complement.</description>
    </item>
    
    <item>
      <title>Bioinformatics with Rosalind - FIB</title>
      <link>https://drdjing.github.io/blog/fib/</link>
      <pubDate>Tue, 04 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://drdjing.github.io/blog/fib/</guid>
      <description>This Rosalind problem deals with a classic: The Fibonacci Sequence! It&amp;rsquo;s a recursive function that takes the two previous solutions to the function and adds them together. For this problem, it&amp;rsquo;s a touch more complex. Given a number of generations, n, and a number of offspring, k:
Given: Positive integers $n /lt 40$ and $k /gt 5$.
Return: The total number of rabbit pairs that will be present after n months, if we begin with 1 pair and in each generation, every pair of reproduction-age rabbits produces a litter of k rabbit pairs (instead of only 1 pair).</description>
    </item>
    
    <item>
      <title>Bioinformatics with Rosalind - RNA</title>
      <link>https://drdjing.github.io/blog/rna/</link>
      <pubDate>Thu, 23 Jul 2020 13:00:00 +0000</pubDate>
      
      <guid>https://drdjing.github.io/blog/rna/</guid>
      <description>This Rosalind problem deals with RNA. RNA differs slightly from DNA, in that the ribose is oxy&amp;rsquo;d instead of deoxy&amp;rsquo;d, and instead of (T)hymine is has (U)racil. The problem itself is pretty simple:
Given: A DNA string t having length at most 1000 nt.
Return: The transcribed RNA string of t.
My answer is as follows. Note this time I load in the string from a text object instead of copying it into the program itself, and output the answer into a text file as well.</description>
    </item>
    
    <item>
      <title>Bioinformatics with Rosalind - DNA</title>
      <link>https://drdjing.github.io/blog/dna/</link>
      <pubDate>Thu, 23 Jul 2020 12:00:00 +0000</pubDate>
      
      <guid>https://drdjing.github.io/blog/dna/</guid>
      <description>There&amp;rsquo;s an offshoot of data science called Bioinformatics, and it&amp;rsquo;s essentially the study of how to extract meaningful information out of genetic information. Now, this sounds super cool, so I&amp;rsquo;ve decided to learn a bit about it. To help me with this, I&amp;rsquo;ll be doing the Rosalind problems, and posting my solution here.
The first problem is to do with DNA, and it&amp;rsquo;s a relatively simple one. All DNA (that I know of) is made up of four nucleotides attached in sequence, along with some deoxyribose sugars and some phosphate groups.</description>
    </item>
    
    <item>
      <title>Is it a wasp or a bee?</title>
      <link>https://drdjing.github.io/blog/beeorwasp/</link>
      <pubDate>Sat, 18 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://drdjing.github.io/blog/beeorwasp/</guid>
      <description>Rcently, I&amp;rsquo;ve been learning fastai methodology to create image recognition nets, with the ultimate goal of determining cloud types, and bee genus&amp;rsquo;. Now that I&amp;rsquo;ve worked on it for a bit, I&amp;rsquo;m ready to show some of my progress, and I&amp;rsquo;ll start with my Bee classification net.
This post is about my bee net. Initially, the idea was to classify bees according to their genus, and this is still on the books for later.</description>
    </item>
    
    <item>
      <title>First simple game</title>
      <link>https://drdjing.github.io/blog/gamedevtut/</link>
      <pubDate>Wed, 15 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://drdjing.github.io/blog/gamedevtut/</guid>
      <description>Following the tutorial given in the Godot documentation was a simple and easy task. They provide all the assets, code snippets, etc, to get you up and running with a simple avoidance game.
The game itself is relatively straight forward, but the tutorial teaches you many valuable things about the way Godot works, including an introduciton to its Node system (very cool, btw), how to instantiate scenes, emission and receival of signals, and others.</description>
    </item>
    
    <item>
      <title>Learning practical machine learning</title>
      <link>https://drdjing.github.io/blog/mllearning/</link>
      <pubDate>Fri, 10 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://drdjing.github.io/blog/mllearning/</guid>
      <description>I&amp;rsquo;ve dabbled a bit in machine learning (ML) before, having taking the introductory course by the famous Andrew Ng on Coursera (LINK). However, upon digging a bit deeper, MATLAB is somewhat outdated to use as a basis for ML tasks these days. Additionally, while the course provided a solid foundation for understanding different types of ML learning algorithms, from a more practical point of view it wasn&amp;rsquo;t as useful. Mostly because the majority of the assignments were mostly pre-filled, leaving the student to create one or two functions that were essentially copy-pasting a piece of math from the lecture slides into MATLAB.</description>
    </item>
    
    <item>
      <title>Labjack take 3</title>
      <link>https://drdjing.github.io/blog/labjack3/</link>
      <pubDate>Wed, 01 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://drdjing.github.io/blog/labjack3/</guid>
      <description>So the new U3&amp;rsquo;s came in, and they are very sleek. I also ordered some of the LJ-Tick addons, which take a couple of open FIO (flexible I/O) ports and &amp;ldquo;converts&amp;rdquo; them to DAC&amp;rsquo;s (digital analog control [I think]) with +/- 10 V capabilities.
So this delivery of hardware should solve the two big problems that I was having when using a single U6 - namely that the DAC&amp;rsquo;s on any of the U-series Labjacks only support a USB voltage of0-4 V (at least to my knowledge), and a serious timing issue I was having while attempting to stream data whilst simultaneously sending read/write commands.</description>
    </item>
    
    <item>
      <title>Reworking the LabJack interface</title>
      <link>https://drdjing.github.io/blog/labjack2/</link>
      <pubDate>Thu, 25 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://drdjing.github.io/blog/labjack2/</guid>
      <description>This blog post was originally going to be about how great I am at making programs, and how my program was practically finished, etc. Unfortunately, however, real life has a way of bringing you back to reality, often in less than ideal ways.
This time, it brought me back with the realisation that because of USB limitations, I cannot multi-thread data from a streaming Labjack and simultaneously command/response a signal output with enough fine time control.</description>
    </item>
    
    <item>
      <title>Starting in Game Development</title>
      <link>https://drdjing.github.io/blog/gamedevstart/</link>
      <pubDate>Wed, 03 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://drdjing.github.io/blog/gamedevstart/</guid>
      <description>I&amp;rsquo;m a man of many ideas. Wanting to develop a simple game, then move onto more complex ones, is one of those ideas. Of course, many have done this before me and many will after me, so I have no qualms about standing on the shoulders of giants, and using a game engine that suits my needs.
Now, onto that. In the game engine world, there are two contenders that everyone knows about (so far as I can tell).</description>
    </item>
    
    <item>
      <title>A simple speed comparison between MATLAB and Julia</title>
      <link>https://drdjing.github.io/blog/speedcompare/</link>
      <pubDate>Sat, 30 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://drdjing.github.io/blog/speedcompare/</guid>
      <description>In an effort to populate my blog with content, I am on a bit of a content-making spree, so I apologise in advance if things are a bit odd.
Julia is a language that seems to be, in my opinion, a good point to move on from MATLAB. It promises C++ speed, with the high-level coding practices of MATLAB.
If you wrap your script in a function, you get your speedup.</description>
    </item>
    
    <item>
      <title>Static Site Generation with Hugo</title>
      <link>https://drdjing.github.io/blog/staticsitegen/</link>
      <pubDate>Sat, 30 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://drdjing.github.io/blog/staticsitegen/</guid>
      <description>So I had issues with getting Pelican to work on Windows (I game a lot, so Windows is more practical for me than a nix distribution), mostly with theme generation because I really didn&amp;rsquo;t want to have to learn yet another language, just to get a website up and running. I recently learned HTML5 and relatively modern CSS practices, including responsive design, and I didn&amp;rsquo;t particularly feel like branching out again so soon.</description>
    </item>
    
    <item>
      <title>Labjack experiments</title>
      <link>https://drdjing.github.io/blog/labjack/</link>
      <pubDate>Fri, 06 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://drdjing.github.io/blog/labjack/</guid>
      <description>My current job has me do a lot of random bits and pieces, very little coherent &amp;ldquo;This is your job&amp;rdquo; tasks. To date, I&amp;rsquo;ve created a website [LINK], studied Machine Learning, decided it was overkill for the image recognition program I then created, and helped to write a paper or two. Now, however, I am stepping well outside of my comfort area and attempting to modernize the interface between a computer and a two-decade old piece of lab equipment.</description>
    </item>
    
  </channel>
</rss>