<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Ingots of learning</title>
    <link>https://drdjing.github.io/blog/</link>
    <description>Recent content in Posts on Ingots of learning</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 08 Jun 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://drdjing.github.io/blog/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Reworking the LabJack interface</title>
      <link>https://drdjing.github.io/blog/labjack2/</link>
      <pubDate>Mon, 08 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://drdjing.github.io/blog/labjack2/</guid>
      <description>To date, I have something that kind of approximates the beginning of the program I want to make. I can set a stream of data to start, but can&amp;rsquo;t stop it. I can live-plot this data, but without much control. I have yet to integrate in signal generation while streaming, which I&amp;rsquo;m pretty sure is possible, but am 100% sure is necessary.
The biggest thing I&amp;rsquo;ve learned so far is that I need to integrate multi-threading.</description>
    </item>
    
    <item>
      <title>Starting in Game Development</title>
      <link>https://drdjing.github.io/blog/gamedevstart/</link>
      <pubDate>Wed, 03 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://drdjing.github.io/blog/gamedevstart/</guid>
      <description>I&amp;rsquo;m a man of many ideas. Wanting to develop a simple game, then move onto more complex ones, is one of those ideas. Of course, many have done this before me and many will after me, so I have no qualms about standing on the shoulders of giants, and using a game engine that suits my needs.
Now, onto that. In the game engine world, there are two contenders that everyone knows about (so far as I can tell).</description>
    </item>
    
    <item>
      <title>A simple speed comparison between MATLAB and Julia</title>
      <link>https://drdjing.github.io/blog/speedcompare/</link>
      <pubDate>Sat, 30 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://drdjing.github.io/blog/speedcompare/</guid>
      <description>In an effort to populate my blog with content, I am on a bit of a content-making spree, so I apologise in advance if things are a bit odd.
Julia is a language that seems to be, in my opinion, a good point to move on from MATLAB. It promises C++ speed, with the high-level coding practices of MATLAB.
If you wrap your script in a function, you get your speedup.</description>
    </item>
    
    <item>
      <title>Static Site Generation with Hugo</title>
      <link>https://drdjing.github.io/blog/staticsitegen/</link>
      <pubDate>Sat, 30 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://drdjing.github.io/blog/staticsitegen/</guid>
      <description>So I had issues with getting Pelican to work on Windows (I game a lot, so Windows is more practical for me than a nix distribution), mostly with theme generation because I really didn&amp;rsquo;t want to have to learn yet another language, just to get a website up and running. I recently learned HTML5 and relatively modern CSS practices, including responsive design, and I didn&amp;rsquo;t particularly feel like branching out again so soon.</description>
    </item>
    
    <item>
      <title>Labjack experiments</title>
      <link>https://drdjing.github.io/blog/labjack/</link>
      <pubDate>Fri, 06 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://drdjing.github.io/blog/labjack/</guid>
      <description>My current job has me do a lot of random bits and pieces, very little coherent &amp;ldquo;This is your job&amp;rdquo; tasks. To date, I&amp;rsquo;ve created a website [LINK], studied Machine Learning, decided it was overkill for the image recognition program I then created, and helped to write a paper or two. Now, however, I am stepping well outside of my comfort area and attempting to modernize the interface between a computer and a two-decade old piece of lab equipment.</description>
    </item>
    
  </channel>
</rss>